name: Build TeXLive image

on:
  push:
  workflow_dispatch:

env:
  REGISTRY:  ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  extract-version:
    runs-on: ubuntu-22.04
    if: github.ref_type == 'tag'
    outputs:
      full: ${{ steps.extract-versions.outputs.full }}
      majorminor: ${{ steps.extract-versions.outputs.majorminor }}
      major: ${{ steps.extract-versions.outputs.major }}

    steps:
      - name: Extract versions
        id: extract-versions
        run: |
          TAG=${GITHUB_REF#refs/tags/} # Remove 'refs/tags/' prefix
          TAG=${TAG#v} # Remove leading 'v' in version if present

          MAJOR=$(echo "$TAG" | cut -d. -f1)
          MINOR=$(echo "$TAG" | cut -d. -f2)

          echo "full=$TAG" >> $GITHUB_OUTPUT
          echo "majorminor=$MAJOR.$MINOR" >> $GITHUB_OUTPUT
          echo "major=$MAJOR" >> $GITHUB_OUTPUT

      - name: Print versions
        run: |
          echo "Full version: ${{ steps.extract-versions.outputs.full }}"
          echo "Major.minor version: ${{ steps.extract-versions.outputs.majorminor }}"
          echo "Major version: ${{ steps.extract-versions.outputs.major }}"

  build:
    runs-on: ubuntu-22.04
    needs:
      - extract-version
    if: always()
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version: [2023, 2024]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Image tags for version
        uses: docker/metadata-action@v5
        if: github.ref_type == 'tag'
        id: tags_versioned
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.extract-version.outputs.full }}-${{ matrix.version }}
            type=raw,value=${{ needs.extract-version.outputs.majorminor }}-${{ matrix.version }}
            type=raw,value=${{ needs.extract-version.outputs.major }}-${{ matrix.version }}

      - name: Image tags for latest
        uses: docker/metadata-action@v5
        if: github.ref_type != 'tag'
        id: tags_latest
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.version }}

      - name: Image metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          labels: |
            me.dusansimic.devcontainer-texlive-image.version=${{ needs.extract-version.outputs.full }}
            me.dusansimic.devcontainer-texlive-image.texlive=${{ matrix.version }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ github.ref_type == 'tag' && steps.tags_versioned.outputs.tags || steps.tags_latest.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TEXLIVE_VERSION=${{ matrix.version }}
